[IP]
#Need to update path_to_search, filename_contains, and filename_not_contains to identify IP images 
path_to_search = /path/to/IP/images/
filename_contains = sub,_IN
filename_not_contains = _OPP
spatial_window_size = (360, 240, 32)
pixdim = (0.7, 0.7, 3)
interp_order = 3
axcodes=(R, A, S)

[OP]
#Need to update path_to_search, filename_contains, and filename_not_contains to identify OP images
path_to_search = /path/to/OP/images/
filename_contains = sub,_OPP
filename_not_contains = _IN
spatial_window_size = (360, 240, 32)
pixdim = (0.7, 0.7, 3)
interp_order = 3
axcodes=(R, A, S)

############################## system configuration sections
[SYSTEM]
#cuda_devices = 0
#num_gpus = 1
num_threads = 1
model_dir = ./neck_muscle_segmentation_model

[NETWORK]
name = dense_vnet
activation_function = relu
batch_size = 1
decay = 1e-5
reg_type = L2

# volume level preprocessing
volume_padding_size = (90,60,8)
# histogram normalisation
histogram_ref_file = ./standardisation_models.txt
norm_type = percentile
cutoff = (0.001, 1.000)
normalisation = True
whitening = True
normalise_foreground_only = True
foreground_type = threshold_plus
multimod_foreground_type = and
window_sampling = uniform

[INFERENCE]
border = (8, 8, 8)
inference_iter = 100000
save_seg_dir = ../segmentations
output_interp_order = 0

############################ custom configuration sections
[SEGMENTATION]
image = IP,OP
label = label
output_prob = False
num_classes = 15
label_normalisation = True
min_numb_labels = 15
compulsory_labels = 0
